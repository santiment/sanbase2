pipeline:
  # For this to work, the build must be set as trusted
  restore-cache:
    image: drillster/drone-volume-cache
    restore: true
    mount:
      - deps
      - _build
      - app/node_modules
    volumes:
      - /tmp/cache:/cache
    when:
      event: [push, pull_request, tag]

  backend:
    group: build
    image: elixir:1.6.1-alpine
    environment:
      - DATABASE_URL=postgres://postgres:password@postgres:5432/postgres
      - INFLUXDB_HOST=influxdb
    commands:
      - mix format --check-formatted
      - apk add --update git postgresql-client
      - mix local.hex --force
      - mix local.rebar --force
      - mix deps.get
      - mix deps.compile
      - mix test
    when:
      event: [push, pull_request, tag]

  frontend:
    group: build
    image: node:latest
    commands:
      - cd app
      - yarn
      - yarn test --ci
    when:
      event: [push, pull_request, tag]

  rebuild-cache:
    image: drillster/drone-volume-cache
    rebuild: true
    mount:
      - deps
      - _build
      - app/node_modules
    volumes:
      - /tmp/cache:/cache
    when:
      event: [push, pull_request, tag]

  ecr:
    image: plugins/ecr
    repo: sanbase
    registry: "$ecr_domain"
    secrets: [ecr_access_key, ecr_secret_key, ecr_region]
    tags:
      - "${DRONE_BRANCH}"
      - "${DRONE_TAG=latest}"
      - "${DRONE_COMMIT_SHA}"
    when:
      event: [push, tag]
      branch: master

  deploy_to_staging:
    #TODO: use a custom image that simplifies the config and also tags the docker image with stage and the timestamp
    image: quay.io/honestbee/drone-kubernetes
    secrets:
      - source: ecr_domain
        target: ecr_domain
      - source: k8s_stage_server
        target: kubernetes_server
      - source: k8s_stage_cert
        target: kubernetes_cert
      - source: k8s_stage_token
        target: kubernetes_token
    environment:
      - PLUGIN_NAMESPACE=default
      - PLUGIN_DEPLOYMENT=sanbase
      - PLUGIN_CONTAINER=sanbase
      - PLUGIN_TAG=${DRONE_COMMIT_SHA}
    commands:
      - export PLUGIN_REPO="$ECR_DOMAIN/sanbase"
      - /bin/update.sh
    when:
      event: [push, tag, deployment]
      branch: master
      environment:
        exclude: [production]

  deploy_to_production:
    #TODO: use a custom image that simplifies the config and also tags the docker image with prod and the timestamp
    image: quay.io/honestbee/drone-kubernetes
    secrets:
      - source: ecr_domain
        target: ecr_domain
      - source: k8s_prod_server
        target: kubernetes_server
      - source: k8s_prod_cert
        target: kubernetes_cert
      - source: k8s_prod_token
        target: kubernetes_token
    environment:
      - PLUGIN_NAMESPACE=default
      - PLUGIN_DEPLOYMENT=sanbase
      - PLUGIN_CONTAINER=sanbase
      - PLUGIN_TAG=${DRONE_COMMIT_SHA}
    commands:
      - export PLUGIN_REPO="$ECR_DOMAIN/sanbase"
      - /bin/update.sh
    when:
      event: deployment
      branch: master
      environment: production

services:
  postgres:
    image: postgres:9.6-alpine
  influxdb:
    image: influxdb:1.4-alpine
